import random
import discord
from discord.ext import commands
from dotenv import load_dotenv
from youtubesearchpython import VideosSearch
import yt_dlp
import os
import asyncio
from datetime import datetime
import pytz
from myserver import server_on

load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")

intents = discord.Intents.default()
intents.message_content = True
intents.voice_states = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

# ====== ‡∏£‡∏∞‡∏ö‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏°‡∏µ Dropdown ======
class AskQuestionView(discord.ui.View):
    def __init__(self, guild):
        super().__init__(timeout=None)
        self.guild = guild

        self.select_choices = discord.ui.Select(
            placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
            min_values=1,
            max_values=1,
            options=[
                discord.SelectOption(label="‡πÄ‡∏≠‡∏≤", value="accept", emoji="üëç"),
                discord.SelectOption(label="‡πÑ‡∏°‡πà‡πÄ‡∏≠‡∏≤", value="reject", emoji="üëé"),
                discord.SelectOption(label="‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡πÉ‡∏à", value="unsure", emoji="‚ùì"),
            ]
        )
        self.select_choices.callback = self.select_callback
        self.add_item(self.select_choices)

    async def select_callback(self, interaction: discord.Interaction):
        choice_set_name = self.select_choices.values[0] if self.select_choices.values else None
        await interaction.response.send_message(f"‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: {choice_set_name}", ephemeral=True)

@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}")
    await bot.tree.sync()

@bot.event
async def on_message(message):
    if message.author.bot:
        return

    msg = message.content
    lower_msg = msg.lower()

    if lower_msg.startswith("doro ‡∏ñ‡∏≤‡∏° "):
        question = msg[10:].strip()

        embed = discord.Embed(
            title="üìã ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å Doro",
            description=f"{question}\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏≤‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á ‚¨áÔ∏è",
            color=discord.Color.pink()
        )
        embed.set_footer(text=f"‡∏ñ‡∏≤‡∏°‡πÇ‡∏î‡∏¢ {message.author.display_name}", icon_url=message.author.display_avatar)

        view = AskQuestionView(message.guild)
        await message.channel.send(embed=embed, view=view)

# ====== ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏≠‡∏∑‡πà‡∏ô (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤) ======
@bot.command()
async def ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤(ctx, *, keyword):
    search = VideosSearch(keyword, limit=1)
    result = search.result()
    if result["result"]:
        video = result["result"][0]
        await ctx.send(f"üîç ‡πÄ‡∏à‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠: {video['title']}\n{video['link']}")
    else:
        await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠")

# ====== ‡∏ö‡∏π‡∏ï Server (Render) ======
server_on()
bot.run(DISCORD_TOKEN)
